---
import { SIDEBAR } from '@/i18n/sidebar'
import { type LanguageKeys } from '@/i18n/ui'

const langFromURL = Astro.url.pathname.split('/')[1] || 'en'
const lang: LanguageKeys = langFromURL as LanguageKeys

const linksArray = Object.entries(SIDEBAR[lang]).map(([key, value]) => {
  if (typeof value === 'string') {
    return {
      link: `${lang}/${key}`,
      t: value,
    }
  } else {
    const sectionKey = key

    return Object.entries(value.sectionItems).map(([key, value]) => {
      if (typeof value === 'string') {
        return {
          link: `${lang}/${sectionKey}/${key}`,
          t: value,
        }
      } else {
        const subsectionKey = key
        return Object.entries(value.subsectionItems).map(([key, value]) => {
          return {
            link: `${lang}/${sectionKey}/${subsectionKey}/${key}`,
            t: value,
          }
        })
      }
    })
  }
})

const flattenedLinksArray = linksArray.flat(Infinity) as {
  link: string
  t: string
}[]

const getLinkIndex = () => {
  for (let i = 0; i < flattenedLinksArray.length; i++) {
    if (Astro.url.pathname.includes(flattenedLinksArray[i].link)) {
      return i
    }
  }
}

const index = getLinkIndex() as number
---

<div class="mb-20 grid grid-cols-2 gap-5 px-10">
  <div>
    {
      index !== 0 && (
        <a
          class="flex items-center rounded-md border border-black/50 p-[10px] px-5 no-underline transition-[background-color] hover:border-black dark:border-white/50 dark:hover:border-white"
          href={Astro.url.origin + '/' + flattenedLinksArray[index - 1].link}
        >
          <svg
            class="mr-4 h-8 w-8"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            fill="none"
          >
            <path
              class="stroke-black dark:stroke-white"
              d="M6 12H18M6 12L11 7M6 12L11 17"
              stroke-width="1.5"
              stroke-linecap="round"
              stroke-linejoin="round"
            />
          </svg>

          <div>
            <p class="text-sm opacity-80">Previous</p>
            <span class="text-2xl">{flattenedLinksArray[index - 1].t}</span>
          </div>
        </a>
      )
    }
  </div>
  <div>
    {
      index !== flattenedLinksArray.length - 1 && (
        <a
          class="flex items-center justify-end rounded-md border border-black/50 p-[10px] px-5 no-underline transition-[background-color] hover:border-black dark:border-white/50 dark:hover:border-white"
          href={Astro.url.origin + '/' + flattenedLinksArray[index + 1].link}
        >
          <div>
            <p class="text-right text-sm opacity-80">Next</p>
            <span class="text-2xl">{flattenedLinksArray[index + 1].t}</span>
          </div>

          <svg
            class="ml-4 h-8 w-8"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            fill="none"
          >
            <path
              class="stroke-black dark:stroke-white"
              d="M6 12H18M18 12L13 7M18 12L13 17"
              stroke-width="1.5"
              stroke-linecap="round"
              stroke-linejoin="round"
            />
          </svg>
        </a>
      )
    }
  </div>
</div>
